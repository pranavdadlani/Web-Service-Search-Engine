http://services.postcodeanywhere.co.uk/uk/lookup.asmx?wsdl
Changes
Data
Set
Soap
In
Changes
Data
Set
Soap
Out
Changes
Data
Set
Cleanse
Soap
In
Cleanse
Soap
Out
Cleanse
Cleanse
Data
Set
Soap
In
Cleanse
Data
Set
Soap
Out
Cleanse
Data
Set
Batch
Cleanse
Soap
In
Batch
Cleanse
Soap
Out
Batch
Cleanse
Batch
Cleanse
Data
Set
Soap
In
Batch
Cleanse
Data
Set
Soap
Out
Batch
Cleanse
Data
Set
Batch
Fetch
Soap
In
Batch
Fetch
Soap
Out
Batch
Fetch
Batch
Fetch
Data
Set
Soap
In
Batch
Fetch
Data
Set
Soap
Out
Batch
Fetch
Data
Set
Statistics
By
Postcode
Soap
In
Statistics
By
Postcode
Soap
Out
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Soap
In
Statistics
By
Postcode
Data
Set
Soap
Out
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Soap
In
Statistics
By
Outcode
Soap
Out
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Soap
In
Statistics
By
Outcode
Data
Set
Soap
Out
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Soap
In
Statistics
By
Sector
Soap
Out
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Soap
In
Statistics
By
Sector
Data
Set
Soap
Out
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Soap
In
Statistics
By
Street
Key
Soap
Out
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Soap
In
Statistics
By
Street
Key
Data
Set
Soap
Out
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Soap
In
Nearest
Outcodes
Soap
Out
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Soap
In
Nearest
Outcodes
Data
Set
Soap
Out
Nearest
Outcodes
Data
Set
Nearest
Sectors
Soap
In
Nearest
Sectors
Soap
Out
Nearest
Sectors
Nearest
Sectors
Data
Set
Soap
In
Nearest
Sectors
Data
Set
Soap
Out
Nearest
Sectors
Data
Set
By
Po
Box
Soap
In
By
Po
Box
Soap
Out
By
Po
Box
By
Po
Box
Data
Set
Soap
In
By
Po
Box
Data
Set
Soap
Out
By
Po
Box
Data
Set
Geocode
Postcode
Soap
In
Geocode
Postcode
Soap
Out
Geocode
Postcode
Geocode
Postcode
Data
Set
Soap
In
Geocode
Postcode
Data
Set
Soap
Out
Geocode
Postcode
Data
Set
Geocode
Address
Id
Soap
In
Geocode
Address
Id
Soap
Out
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Soap
In
Geocode
Address
Id
Data
Set
Soap
Out
Geocode
Address
Id
Data
Set
Geocode
Address
Soap
In
Geocode
Address
Soap
Out
Geocode
Address
Geocode
Address
Data
Set
Soap
In
Geocode
Address
Data
Set
Soap
Out
Geocode
Address
Data
Set
Distance
Soap
In
Distance
Soap
Out
Distance
Data
Set
Soap
In
Distance
Data
Set
Soap
Out
Distance
Data
Set
Batch
Postcode
Changes
Soap
In
Batch
Postcode
Changes
Soap
Out
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Soap
In
Batch
Postcode
Changes
Data
Set
Soap
Out
Batch
Postcode
Changes
Data
Set
Fetch
Address
Soap
In
Fetch
Address
Soap
Out
Fetch
Fast
Address
Soap
In
Fast
Address
Soap
Out
Fast
Browse
Soap
In
Browse
Soap
Out
Browse
Browse
Data
Set
Soap
In
Browse
Data
Set
Soap
Out
Browse
Data
Set
By
Area
Soap
In
By
Area
Soap
Out
By
Area
By
Area
Data
Set
Soap
In
By
Area
Data
Set
Soap
Out
By
Area
Data
Set
By
Postcode
Soap
In
By
Postcode
Soap
Out
By
Postcode
By
Postcode
Data
Set
Soap
In
By
Postcode
Data
Set
Soap
Out
By
Postcode
Data
Set
By
Postcode
Combined
Soap
In
By
Postcode
Combined
Soap
Out
By
Postcode
Combined
By
Postcode
Filtered
Soap
In
By
Postcode
Filtered
Soap
Out
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
Soap
In
By
Postcode
Filtered
Data
Set
Soap
Out
By
Postcode
Filtered
Data
Set
By
Coordinates
Soap
In
By
Coordinates
Soap
Out
By
Coordinates
By
Coordinates
Data
Set
Soap
In
By
Coordinates
Data
Set
Soap
Out
By
Coordinates
Data
Set
By
Outcode
Soap
In
By
Outcode
Soap
Out
By
Outcode
By
Outcode
Data
Set
Soap
In
By
Outcode
Data
Set
Soap
Out
By
Outcode
Data
Set
By
Organisation
Soap
In
By
Organisation
Soap
Out
By
Organisation
By
Organisation
Data
Set
Soap
In
By
Organisation
Data
Set
Soap
Out
By
Organisation
Data
Set
By
Organisation
Combined
Soap
In
By
Organisation
Combined
Soap
Out
By
Organisation
Combined
By
Street
Soap
In
By
Street
Soap
Out
By
Street
By
Street
Dataset
Soap
In
By
Street
Dataset
Soap
Out
By
Street
Dataset
By
Street
Filtered
Soap
In
By
Street
Filtered
Soap
Out
By
Street
Filtered
By
Street
Filtered
Dataset
Soap
In
By
Street
Filtered
Dataset
Soap
Out
By
Street
Filtered
Dataset
By
Street
Combined
Soap
In
By
Street
Combined
Soap
Out
By
Street
Combined
By
Building
Soap
In
By
Building
Soap
Out
By
Building
By
Building
Dataset
Soap
In
By
Building
Dataset
Soap
Out
By
Building
Dataset
By
Building
Combined
Soap
In
By
Building
Combined
Soap
Out
By
Building
Combined
By
Street
Key
Soap
In
By
Street
Key
Soap
Out
By
Street
Key
By
Street
Key
Data
Set
Soap
In
By
Street
Key
Data
Set
Soap
Out
By
Street
Key
Data
Set
By
Street
Key
Combined
Soap
In
By
Street
Key
Combined
Soap
Out
By
Street
Key
Combined
By
Locality
Key
Soap
In
By
Locality
Key
Soap
Out
By
Locality
Key
By
Locality
Key
Data
Set
Soap
In
By
Locality
Key
Data
Set
Soap
Out
By
Locality
Key
Data
Set
By
Location
Soap
In
By
Location
Soap
Out
By
Location
By
Location
Data
Set
Soap
In
By
Location
Data
Set
Soap
Out
By
Location
Data
Set
Location
Soap
In
Location
Soap
Out
Location
Soap
In
Location
Soap
Out
Location
Location
Data
Set
Soap
In
Location
Data
Set
Soap
Out
Location
Data
Set
By
Free
Text
Soap
In
By
Free
Text
Soap
Out
By
Free
Text
By
Free
Text
Data
Set
Soap
In
By
Free
Text
Data
Set
Soap
Out
By
Free
Text
Data
Set
By
Free
Text
Combined
Soap
In
By
Free
Text
Combined
Soap
Out
By
Free
Text
Combined
Fetch
Address
Simple
Soap
In
Fetch
Address
Simple
Soap
Out
Fetch
Address
Simple
Fetch
Address
Soap
In
Fetch
Address
Soap
Out
Fetch
Address
Fetch
Address
Soap
In
Fetch
Address
Soap
Out
Fetch
Fast
Address
Soap
In
Fast
Address
Soap
Out
Fast
Fast
Address
Soap
In
Fast
Address
Soap
Out
Fast
Address
Fetch
Address
Data
Set
Soap
In
Fetch
Address
Data
Set
Soap
Out
Fetch
Address
Data
Set
Fast
Address
Data
Set
Soap
In
Fast
Address
Data
Set
Soap
Out
Fast
Address
Data
Set
Distance
Soap
In
Distance
Soap
Out
Distance
Nearest
Postcode
Soap
In
Nearest
Postcode
Soap
Out
Nearest
Postcode
Nearest
Postcode
Data
Set
Soap
In
Nearest
Postcode
Data
Set
Soap
Out
Nearest
Postcode
Data
Set
Nearest
Property
Soap
In
Nearest
Property
Soap
Out
Nearest
Property
Nearest
Property
Data
Set
Soap
In
Nearest
Property
Data
Set
Soap
Out
Nearest
Property
Data
Set
Nearest
Soap
In
Nearest
Soap
Out
Nearest
Nearest
Data
Set
Soap
In
Nearest
Data
Set
Soap
Out
Nearest
Data
Set
Nearest
Soap
In
Nearest
Soap
Out
Nearest
Data
Set
Soap
In
Nearest
Data
Set
Soap
Out
Nearest
Data
Set
Stored
Nearest
Soap
In
Stored
Nearest
Soap
Out
Stored
Nearest
Stored
Nearest
Data
Set
Soap
In
Stored
Nearest
Data
Set
Soap
Out
Stored
Nearest
Data
Set
Stored
Nearest
Soap
In
Stored
Nearest
Soap
Out
Stored
Stored
Nearest
Data
Set
Soap
In
Stored
Nearest
Data
Set
Soap
Out
Stored
Nearest
Data
Set
Stored
Nearest
Soap
In
Stored
Nearest
Soap
Out
Stored
Nearest
Radial
Soap
In
Nearest
Radial
Soap
Out
Nearest
Radial
Nearest
Radial
Data
Set
Soap
In
Nearest
Radial
Data
Set
Soap
Out
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Soap
In
Stored
Nearest
Radial
Soap
Out
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Soap
In
Stored
Nearest
Radial
Data
Set
Soap
Out
Stored
Nearest
Radial
Data
Set
Changes
Soap
In
Changes
Soap
Out
Changes
Changes
Data
Set
Http
Get
In
Changes
Data
Set
Http
Get
Out
Changes
Data
Set
Cleanse
Http
Get
In
Cleanse
Http
Get
Out
Cleanse
Cleanse
Data
Set
Http
Get
In
Cleanse
Data
Set
Http
Get
Out
Cleanse
Data
Set
Batch
Cleanse
Http
Get
In
Batch
Cleanse
Http
Get
Out
Batch
Cleanse
Batch
Cleanse
Data
Set
Http
Get
In
Batch
Cleanse
Data
Set
Http
Get
Out
Batch
Cleanse
Data
Set
Batch
Fetch
Http
Get
In
Batch
Fetch
Http
Get
Out
Batch
Fetch
Batch
Fetch
Data
Set
Http
Get
In
Batch
Fetch
Data
Set
Http
Get
Out
Batch
Fetch
Data
Set
Statistics
By
Postcode
Http
Get
In
Statistics
By
Postcode
Http
Get
Out
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Http
Get
In
Statistics
By
Postcode
Data
Set
Http
Get
Out
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Http
Get
In
Statistics
By
Outcode
Http
Get
Out
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Http
Get
In
Statistics
By
Outcode
Data
Set
Http
Get
Out
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Http
Get
In
Statistics
By
Sector
Http
Get
Out
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Http
Get
In
Statistics
By
Sector
Data
Set
Http
Get
Out
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Http
Get
In
Statistics
By
Street
Key
Http
Get
Out
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Http
Get
In
Statistics
By
Street
Key
Data
Set
Http
Get
Out
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Http
Get
In
Nearest
Outcodes
Http
Get
Out
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Http
Get
In
Nearest
Outcodes
Data
Set
Http
Get
Out
Nearest
Outcodes
Data
Set
Nearest
Sectors
Http
Get
In
Nearest
Sectors
Http
Get
Out
Nearest
Sectors
Nearest
Sectors
Data
Set
Http
Get
In
Nearest
Sectors
Data
Set
Http
Get
Out
Nearest
Sectors
Data
Set
By
Po
Box
Http
Get
In
By
Po
Box
Http
Get
Out
By
Po
Box
By
Po
Box
Data
Set
Http
Get
In
By
Po
Box
Data
Set
Http
Get
Out
By
Po
Box
Data
Set
Geocode
Postcode
Http
Get
In
Geocode
Postcode
Http
Get
Out
Geocode
Postcode
Geocode
Postcode
Data
Set
Http
Get
In
Geocode
Postcode
Data
Set
Http
Get
Out
Geocode
Postcode
Data
Set
Geocode
Address
Id
Http
Get
In
Geocode
Address
Id
Http
Get
Out
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Http
Get
In
Geocode
Address
Id
Data
Set
Http
Get
Out
Geocode
Address
Id
Data
Set
Geocode
Address
Http
Get
In
Geocode
Address
Http
Get
Out
Geocode
Address
Geocode
Address
Data
Set
Http
Get
In
Geocode
Address
Data
Set
Http
Get
Out
Geocode
Address
Data
Set
Distance
Http
Get
In
Distance
Http
Get
Out
Distance
Data
Set
Http
Get
In
Distance
Data
Set
Http
Get
Out
Distance
Data
Set
Batch
Postcode
Changes
Http
Get
In
Batch
Postcode
Changes
Http
Get
Out
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Http
Get
In
Batch
Postcode
Changes
Data
Set
Http
Get
Out
Batch
Postcode
Changes
Data
Set
Fetch
Address
Http
Get
In
Fetch
Address
Http
Get
Out
Fetch
Fast
Address
Http
Get
In
Fast
Address
Http
Get
Out
Fast
Browse
Http
Get
In
Browse
Http
Get
Out
Browse
Browse
Data
Set
Http
Get
In
Browse
Data
Set
Http
Get
Out
Browse
Data
Set
By
Area
Http
Get
In
By
Area
Http
Get
Out
By
Area
By
Area
Data
Set
Http
Get
In
By
Area
Data
Set
Http
Get
Out
By
Area
Data
Set
By
Postcode
Http
Get
In
By
Postcode
Http
Get
Out
By
Postcode
By
Postcode
Data
Set
Http
Get
In
By
Postcode
Data
Set
Http
Get
Out
By
Postcode
Data
Set
By
Postcode
Combined
Http
Get
In
By
Postcode
Combined
Http
Get
Out
By
Postcode
Combined
By
Postcode
Filtered
Http
Get
In
By
Postcode
Filtered
Http
Get
Out
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
Http
Get
In
By
Postcode
Filtered
Data
Set
Http
Get
Out
By
Postcode
Filtered
Data
Set
By
Coordinates
Http
Get
In
By
Coordinates
Http
Get
Out
By
Coordinates
By
Coordinates
Data
Set
Http
Get
In
By
Coordinates
Data
Set
Http
Get
Out
By
Coordinates
Data
Set
By
Outcode
Http
Get
In
By
Outcode
Http
Get
Out
By
Outcode
By
Outcode
Data
Set
Http
Get
In
By
Outcode
Data
Set
Http
Get
Out
By
Outcode
Data
Set
By
Organisation
Http
Get
In
By
Organisation
Http
Get
Out
By
Organisation
By
Organisation
Data
Set
Http
Get
In
By
Organisation
Data
Set
Http
Get
Out
By
Organisation
Data
Set
By
Organisation
Combined
Http
Get
In
By
Organisation
Combined
Http
Get
Out
By
Organisation
Combined
By
Street
Http
Get
In
By
Street
Http
Get
Out
By
Street
By
Street
Dataset
Http
Get
In
By
Street
Dataset
Http
Get
Out
By
Street
Dataset
By
Street
Filtered
Http
Get
In
By
Street
Filtered
Http
Get
Out
By
Street
Filtered
By
Street
Filtered
Dataset
Http
Get
In
By
Street
Filtered
Dataset
Http
Get
Out
By
Street
Filtered
Dataset
By
Street
Combined
Http
Get
In
By
Street
Combined
Http
Get
Out
By
Street
Combined
By
Building
Http
Get
In
By
Building
Http
Get
Out
By
Building
By
Building
Dataset
Http
Get
In
By
Building
Dataset
Http
Get
Out
By
Building
Dataset
By
Building
Combined
Http
Get
In
By
Building
Combined
Http
Get
Out
By
Building
Combined
By
Street
Key
Http
Get
In
By
Street
Key
Http
Get
Out
By
Street
Key
By
Street
Key
Data
Set
Http
Get
In
By
Street
Key
Data
Set
Http
Get
Out
By
Street
Key
Data
Set
By
Street
Key
Combined
Http
Get
In
By
Street
Key
Combined
Http
Get
Out
By
Street
Key
Combined
By
Locality
Key
Http
Get
In
By
Locality
Key
Http
Get
Out
By
Locality
Key
By
Locality
Key
Data
Set
Http
Get
In
By
Locality
Key
Data
Set
Http
Get
Out
By
Locality
Key
Data
Set
By
Location
Http
Get
In
By
Location
Http
Get
Out
By
Location
By
Location
Data
Set
Http
Get
In
By
Location
Data
Set
Http
Get
Out
By
Location
Data
Set
Location
Http
Get
In
Location
Http
Get
Out
Location
Http
Get
In
Location
Http
Get
Out
Location
Location
Data
Set
Http
Get
In
Location
Data
Set
Http
Get
Out
Location
Data
Set
By
Free
Text
Http
Get
In
By
Free
Text
Http
Get
Out
By
Free
Text
By
Free
Text
Data
Set
Http
Get
In
By
Free
Text
Data
Set
Http
Get
Out
By
Free
Text
Data
Set
By
Free
Text
Combined
Http
Get
In
By
Free
Text
Combined
Http
Get
Out
By
Free
Text
Combined
Fetch
Address
Simple
Http
Get
In
Fetch
Address
Simple
Http
Get
Out
Fetch
Address
Simple
Fetch
Address
Http
Get
In
Fetch
Address
Http
Get
Out
Fetch
Address
Fetch
Address
Http
Get
In
Fetch
Address
Http
Get
Out
Fetch
Fast
Address
Http
Get
In
Fast
Address
Http
Get
Out
Fast
Fast
Address
Http
Get
In
Fast
Address
Http
Get
Out
Fast
Address
Fetch
Address
Data
Set
Http
Get
In
Fetch
Address
Data
Set
Http
Get
Out
Fetch
Address
Data
Set
Fast
Address
Data
Set
Http
Get
In
Fast
Address
Data
Set
Http
Get
Out
Fast
Address
Data
Set
Distance
Http
Get
In
Distance
Http
Get
Out
Distance
Nearest
Postcode
Http
Get
In
Nearest
Postcode
Http
Get
Out
Nearest
Postcode
Nearest
Postcode
Data
Set
Http
Get
In
Nearest
Postcode
Data
Set
Http
Get
Out
Nearest
Postcode
Data
Set
Nearest
Property
Http
Get
In
Nearest
Property
Http
Get
Out
Nearest
Property
Nearest
Property
Data
Set
Http
Get
In
Nearest
Property
Data
Set
Http
Get
Out
Nearest
Property
Data
Set
Nearest
Http
Get
In
Nearest
Http
Get
Out
Nearest
Nearest
Data
Set
Http
Get
In
Nearest
Data
Set
Http
Get
Out
Nearest
Data
Set
Nearest
Http
Get
In
Nearest
Http
Get
Out
Nearest
Data
Set
Http
Get
In
Nearest
Data
Set
Http
Get
Out
Nearest
Data
Set
Stored
Nearest
Http
Get
In
Stored
Nearest
Http
Get
Out
Stored
Nearest
Stored
Nearest
Data
Set
Http
Get
In
Stored
Nearest
Data
Set
Http
Get
Out
Stored
Nearest
Data
Set
Stored
Nearest
Http
Get
In
Stored
Nearest
Http
Get
Out
Stored
Stored
Nearest
Data
Set
Http
Get
In
Stored
Nearest
Data
Set
Http
Get
Out
Stored
Nearest
Data
Set
Stored
Nearest
Http
Get
In
Stored
Nearest
Http
Get
Out
Stored
Nearest
Radial
Http
Get
In
Nearest
Radial
Http
Get
Out
Nearest
Radial
Nearest
Radial
Data
Set
Http
Get
In
Nearest
Radial
Data
Set
Http
Get
Out
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Http
Get
In
Stored
Nearest
Radial
Http
Get
Out
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Http
Get
In
Stored
Nearest
Radial
Data
Set
Http
Get
Out
Stored
Nearest
Radial
Data
Set
Changes
Http
Get
In
Changes
Http
Get
Out
Changes
Changes
Data
Set
Http
Post
In
Changes
Data
Set
Http
Post
Out
Changes
Data
Set
Cleanse
Http
Post
In
Cleanse
Http
Post
Out
Cleanse
Cleanse
Data
Set
Http
Post
In
Cleanse
Data
Set
Http
Post
Out
Cleanse
Data
Set
Batch
Cleanse
Http
Post
In
Batch
Cleanse
Http
Post
Out
Batch
Cleanse
Batch
Cleanse
Data
Set
Http
Post
In
Batch
Cleanse
Data
Set
Http
Post
Out
Batch
Cleanse
Data
Set
Batch
Fetch
Http
Post
In
Batch
Fetch
Http
Post
Out
Batch
Fetch
Batch
Fetch
Data
Set
Http
Post
In
Batch
Fetch
Data
Set
Http
Post
Out
Batch
Fetch
Data
Set
Statistics
By
Postcode
Http
Post
In
Statistics
By
Postcode
Http
Post
Out
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Http
Post
In
Statistics
By
Postcode
Data
Set
Http
Post
Out
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Http
Post
In
Statistics
By
Outcode
Http
Post
Out
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Http
Post
In
Statistics
By
Outcode
Data
Set
Http
Post
Out
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Http
Post
In
Statistics
By
Sector
Http
Post
Out
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Http
Post
In
Statistics
By
Sector
Data
Set
Http
Post
Out
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Http
Post
In
Statistics
By
Street
Key
Http
Post
Out
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Http
Post
In
Statistics
By
Street
Key
Data
Set
Http
Post
Out
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Http
Post
In
Nearest
Outcodes
Http
Post
Out
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Http
Post
In
Nearest
Outcodes
Data
Set
Http
Post
Out
Nearest
Outcodes
Data
Set
Nearest
Sectors
Http
Post
In
Nearest
Sectors
Http
Post
Out
Nearest
Sectors
Nearest
Sectors
Data
Set
Http
Post
In
Nearest
Sectors
Data
Set
Http
Post
Out
Nearest
Sectors
Data
Set
By
Po
Box
Http
Post
In
By
Po
Box
Http
Post
Out
By
Po
Box
By
Po
Box
Data
Set
Http
Post
In
By
Po
Box
Data
Set
Http
Post
Out
By
Po
Box
Data
Set
Geocode
Postcode
Http
Post
In
Geocode
Postcode
Http
Post
Out
Geocode
Postcode
Geocode
Postcode
Data
Set
Http
Post
In
Geocode
Postcode
Data
Set
Http
Post
Out
Geocode
Postcode
Data
Set
Geocode
Address
Id
Http
Post
In
Geocode
Address
Id
Http
Post
Out
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Http
Post
In
Geocode
Address
Id
Data
Set
Http
Post
Out
Geocode
Address
Id
Data
Set
Geocode
Address
Http
Post
In
Geocode
Address
Http
Post
Out
Geocode
Address
Geocode
Address
Data
Set
Http
Post
In
Geocode
Address
Data
Set
Http
Post
Out
Geocode
Address
Data
Set
Distance
Http
Post
In
Distance
Http
Post
Out
Distance
Data
Set
Http
Post
In
Distance
Data
Set
Http
Post
Out
Distance
Data
Set
Batch
Postcode
Changes
Http
Post
In
Batch
Postcode
Changes
Http
Post
Out
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Http
Post
In
Batch
Postcode
Changes
Data
Set
Http
Post
Out
Batch
Postcode
Changes
Data
Set
Fetch
Address
Http
Post
In
Fetch
Address
Http
Post
Out
Fetch
Fast
Address
Http
Post
In
Fast
Address
Http
Post
Out
Fast
Browse
Http
Post
In
Browse
Http
Post
Out
Browse
Browse
Data
Set
Http
Post
In
Browse
Data
Set
Http
Post
Out
Browse
Data
Set
By
Area
Http
Post
In
By
Area
Http
Post
Out
By
Area
By
Area
Data
Set
Http
Post
In
By
Area
Data
Set
Http
Post
Out
By
Area
Data
Set
By
Postcode
Http
Post
In
By
Postcode
Http
Post
Out
By
Postcode
By
Postcode
Data
Set
Http
Post
In
By
Postcode
Data
Set
Http
Post
Out
By
Postcode
Data
Set
By
Postcode
Combined
Http
Post
In
By
Postcode
Combined
Http
Post
Out
By
Postcode
Combined
By
Postcode
Filtered
Http
Post
In
By
Postcode
Filtered
Http
Post
Out
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
Http
Post
In
By
Postcode
Filtered
Data
Set
Http
Post
Out
By
Postcode
Filtered
Data
Set
By
Coordinates
Http
Post
In
By
Coordinates
Http
Post
Out
By
Coordinates
By
Coordinates
Data
Set
Http
Post
In
By
Coordinates
Data
Set
Http
Post
Out
By
Coordinates
Data
Set
By
Outcode
Http
Post
In
By
Outcode
Http
Post
Out
By
Outcode
By
Outcode
Data
Set
Http
Post
In
By
Outcode
Data
Set
Http
Post
Out
By
Outcode
Data
Set
By
Organisation
Http
Post
In
By
Organisation
Http
Post
Out
By
Organisation
By
Organisation
Data
Set
Http
Post
In
By
Organisation
Data
Set
Http
Post
Out
By
Organisation
Data
Set
By
Organisation
Combined
Http
Post
In
By
Organisation
Combined
Http
Post
Out
By
Organisation
Combined
By
Street
Http
Post
In
By
Street
Http
Post
Out
By
Street
By
Street
Dataset
Http
Post
In
By
Street
Dataset
Http
Post
Out
By
Street
Dataset
By
Street
Filtered
Http
Post
In
By
Street
Filtered
Http
Post
Out
By
Street
Filtered
By
Street
Filtered
Dataset
Http
Post
In
By
Street
Filtered
Dataset
Http
Post
Out
By
Street
Filtered
Dataset
By
Street
Combined
Http
Post
In
By
Street
Combined
Http
Post
Out
By
Street
Combined
By
Building
Http
Post
In
By
Building
Http
Post
Out
By
Building
By
Building
Dataset
Http
Post
In
By
Building
Dataset
Http
Post
Out
By
Building
Dataset
By
Building
Combined
Http
Post
In
By
Building
Combined
Http
Post
Out
By
Building
Combined
By
Street
Key
Http
Post
In
By
Street
Key
Http
Post
Out
By
Street
Key
By
Street
Key
Data
Set
Http
Post
In
By
Street
Key
Data
Set
Http
Post
Out
By
Street
Key
Data
Set
By
Street
Key
Combined
Http
Post
In
By
Street
Key
Combined
Http
Post
Out
By
Street
Key
Combined
By
Locality
Key
Http
Post
In
By
Locality
Key
Http
Post
Out
By
Locality
Key
By
Locality
Key
Data
Set
Http
Post
In
By
Locality
Key
Data
Set
Http
Post
Out
By
Locality
Key
Data
Set
By
Location
Http
Post
In
By
Location
Http
Post
Out
By
Location
By
Location
Data
Set
Http
Post
In
By
Location
Data
Set
Http
Post
Out
By
Location
Data
Set
Location
Http
Post
In
Location
Http
Post
Out
Location
Http
Post
In
Location
Http
Post
Out
Location
Location
Data
Set
Http
Post
In
Location
Data
Set
Http
Post
Out
Location
Data
Set
By
Free
Text
Http
Post
In
By
Free
Text
Http
Post
Out
By
Free
Text
By
Free
Text
Data
Set
Http
Post
In
By
Free
Text
Data
Set
Http
Post
Out
By
Free
Text
Data
Set
By
Free
Text
Combined
Http
Post
In
By
Free
Text
Combined
Http
Post
Out
By
Free
Text
Combined
Fetch
Address
Simple
Http
Post
In
Fetch
Address
Simple
Http
Post
Out
Fetch
Address
Simple
Fetch
Address
Http
Post
In
Fetch
Address
Http
Post
Out
Fetch
Address
Fetch
Address
Http
Post
In
Fetch
Address
Http
Post
Out
Fetch
Fast
Address
Http
Post
In
Fast
Address
Http
Post
Out
Fast
Fast
Address
Http
Post
In
Fast
Address
Http
Post
Out
Fast
Address
Fetch
Address
Data
Set
Http
Post
In
Fetch
Address
Data
Set
Http
Post
Out
Fetch
Address
Data
Set
Fast
Address
Data
Set
Http
Post
In
Fast
Address
Data
Set
Http
Post
Out
Fast
Address
Data
Set
Distance
Http
Post
In
Distance
Http
Post
Out
Distance
Nearest
Postcode
Http
Post
In
Nearest
Postcode
Http
Post
Out
Nearest
Postcode
Nearest
Postcode
Data
Set
Http
Post
In
Nearest
Postcode
Data
Set
Http
Post
Out
Nearest
Postcode
Data
Set
Nearest
Property
Http
Post
In
Nearest
Property
Http
Post
Out
Nearest
Property
Nearest
Property
Data
Set
Http
Post
In
Nearest
Property
Data
Set
Http
Post
Out
Nearest
Property
Data
Set
Nearest
Http
Post
In
Nearest
Http
Post
Out
Nearest
Nearest
Data
Set
Http
Post
In
Nearest
Data
Set
Http
Post
Out
Nearest
Data
Set
Nearest
Http
Post
In
Nearest
Http
Post
Out
Nearest
Data
Set
Http
Post
In
Nearest
Data
Set
Http
Post
Out
Nearest
Data
Set
Stored
Nearest
Http
Post
In
Stored
Nearest
Http
Post
Out
Stored
Nearest
Stored
Nearest
Data
Set
Http
Post
In
Stored
Nearest
Data
Set
Http
Post
Out
Stored
Nearest
Data
Set
Stored
Nearest
Http
Post
In
Stored
Nearest
Http
Post
Out
Stored
Stored
Nearest
Data
Set
Http
Post
In
Stored
Nearest
Data
Set
Http
Post
Out
Stored
Nearest
Data
Set
Stored
Nearest
Http
Post
In
Stored
Nearest
Http
Post
Out
Stored
Nearest
Radial
Http
Post
In
Nearest
Radial
Http
Post
Out
Nearest
Radial
Nearest
Radial
Data
Set
Http
Post
In
Nearest
Radial
Data
Set
Http
Post
Out
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Http
Post
In
Stored
Nearest
Radial
Http
Post
Out
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Http
Post
In
Stored
Nearest
Radial
Data
Set
Http
Post
Out
Stored
Nearest
Radial
Data
Set
Changes
Http
Post
In
Changes
Http
Post
Out
Changes
Changes
Data
Set
Cleanse
Cleanse
Data
Set
Batch
Cleanse
Batch
Cleanse
Data
Set
Batch
Fetch
Batch
Fetch
Data
Set
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Nearest
Sectors
Nearest
Sectors
Data
Set
By
Po
Box
By
Po
Box
Data
Set
Geocode
Postcode
Geocode
Postcode
Data
Set
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Geocode
Address
Geocode
Address
Data
Set
Distance
Data
Set
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Fetch
Fast
Browse
Browse
Data
Set
By
Area
By
Area
Data
Set
By
Postcode
By
Postcode
Data
Set
By
Postcode
Combined
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
By
Coordinates
By
Coordinates
Data
Set
By
Outcode
By
Outcode
Data
Set
By
Organisation
By
Organisation
Data
Set
By
Organisation
Combined
By
Street
By
Street
Dataset
By
Street
Filtered
By
Street
Filtered
Dataset
By
Street
Combined
By
Building
By
Building
Dataset
By
Building
Combined
By
Street
Key
By
Street
Key
Data
Set
By
Street
Key
Combined
By
Locality
Key
By
Locality
Key
Data
Set
By
Location
By
Location
Data
Set
Location
Location
Data
Set
By
Free
Text
By
Free
Text
Data
Set
By
Free
Text
Combined
Fetch
Address
Simple
Fetch
Address
Fetch
Fast
Fast
Address
Fetch
Address
Data
Set
Fast
Address
Data
Set
Distance
Nearest
Postcode
Nearest
Postcode
Data
Set
Nearest
Property
Nearest
Property
Data
Set
Nearest
Nearest
Data
Set
Nearest
Data
Set
Stored
Nearest
Stored
Nearest
Data
Set
Stored
Stored
Nearest
Data
Set
Stored
Nearest
Radial
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Changes
Changes
Data
Set
Cleanse
Cleanse
Data
Set
Batch
Cleanse
Batch
Cleanse
Data
Set
Batch
Fetch
Batch
Fetch
Data
Set
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Nearest
Sectors
Nearest
Sectors
Data
Set
By
Po
Box
By
Po
Box
Data
Set
Geocode
Postcode
Geocode
Postcode
Data
Set
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Geocode
Address
Geocode
Address
Data
Set
Distance
Data
Set
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Fetch
Fast
Browse
Browse
Data
Set
By
Area
By
Area
Data
Set
By
Postcode
By
Postcode
Data
Set
By
Postcode
Combined
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
By
Coordinates
By
Coordinates
Data
Set
By
Outcode
By
Outcode
Data
Set
By
Organisation
By
Organisation
Data
Set
By
Organisation
Combined
By
Street
By
Street
Dataset
By
Street
Filtered
By
Street
Filtered
Dataset
By
Street
Combined
By
Building
By
Building
Dataset
By
Building
Combined
By
Street
Key
By
Street
Key
Data
Set
By
Street
Key
Combined
By
Locality
Key
By
Locality
Key
Data
Set
By
Location
By
Location
Data
Set
Location
Location
Data
Set
By
Free
Text
By
Free
Text
Data
Set
By
Free
Text
Combined
Fetch
Address
Simple
Fetch
Address
Fetch
Fast
Fast
Address
Fetch
Address
Data
Set
Fast
Address
Data
Set
Distance
Nearest
Postcode
Nearest
Postcode
Data
Set
Nearest
Property
Nearest
Property
Data
Set
Nearest
Nearest
Data
Set
Nearest
Data
Set
Stored
Nearest
Stored
Nearest
Data
Set
Stored
Stored
Nearest
Data
Set
Stored
Nearest
Radial
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Changes
Changes
Data
Set
Cleanse
Cleanse
Data
Set
Batch
Cleanse
Batch
Cleanse
Data
Set
Batch
Fetch
Batch
Fetch
Data
Set
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Nearest
Sectors
Nearest
Sectors
Data
Set
By
Po
Box
By
Po
Box
Data
Set
Geocode
Postcode
Geocode
Postcode
Data
Set
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Geocode
Address
Geocode
Address
Data
Set
Distance
Data
Set
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Fetch
Fast
Browse
Browse
Data
Set
By
Area
By
Area
Data
Set
By
Postcode
By
Postcode
Data
Set
By
Postcode
Combined
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
By
Coordinates
By
Coordinates
Data
Set
By
Outcode
By
Outcode
Data
Set
By
Organisation
By
Organisation
Data
Set
By
Organisation
Combined
By
Street
By
Street
Dataset
By
Street
Filtered
By
Street
Filtered
Dataset
By
Street
Combined
By
Building
By
Building
Dataset
By
Building
Combined
By
Street
Key
By
Street
Key
Data
Set
By
Street
Key
Combined
By
Locality
Key
By
Locality
Key
Data
Set
By
Location
By
Location
Data
Set
Location
Location
Data
Set
By
Free
Text
By
Free
Text
Data
Set
By
Free
Text
Combined
Fetch
Address
Simple
Fetch
Address
Fetch
Fast
Fast
Address
Fetch
Address
Data
Set
Fast
Address
Data
Set
Distance
Nearest
Postcode
Nearest
Postcode
Data
Set
Nearest
Property
Nearest
Property
Data
Set
Nearest
Nearest
Data
Set
Nearest
Data
Set
Stored
Nearest
Stored
Nearest
Data
Set
Stored
Stored
Nearest
Data
Set
Stored
Nearest
Radial
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Changes
Changes
Data
Set
Cleanse
Cleanse
Data
Set
Batch
Cleanse
Batch
Cleanse
Data
Set
Batch
Fetch
Batch
Fetch
Data
Set
Statistics
By
Postcode
Statistics
By
Postcode
Data
Set
Statistics
By
Outcode
Statistics
By
Outcode
Data
Set
Statistics
By
Sector
Statistics
By
Sector
Data
Set
Statistics
By
Street
Key
Statistics
By
Street
Key
Data
Set
Nearest
Outcodes
Nearest
Outcodes
Data
Set
Nearest
Sectors
Nearest
Sectors
Data
Set
By
Po
Box
By
Po
Box
Data
Set
Geocode
Postcode
Geocode
Postcode
Data
Set
Geocode
Address
Id
Geocode
Address
Id
Data
Set
Geocode
Address
Geocode
Address
Data
Set
Distance
Data
Set
Batch
Postcode
Changes
Batch
Postcode
Changes
Data
Set
Fetch
Fast
Browse
Browse
Data
Set
By
Area
By
Area
Data
Set
By
Postcode
By
Postcode
Data
Set
By
Postcode
Combined
By
Postcode
Filtered
By
Postcode
Filtered
Data
Set
By
Coordinates
By
Coordinates
Data
Set
By
Outcode
By
Outcode
Data
Set
By
Organisation
By
Organisation
Data
Set
By
Organisation
Combined
By
Street
By
Street
Dataset
By
Street
Filtered
By
Street
Filtered
Dataset
By
Street
Combined
By
Building
By
Building
Dataset
By
Building
Combined
By
Street
Key
By
Street
Key
Data
Set
By
Street
Key
Combined
By
Locality
Key
By
Locality
Key
Data
Set
By
Location
By
Location
Data
Set
Location
Location
Data
Set
By
Free
Text
By
Free
Text
Data
Set
By
Free
Text
Combined
Fetch
Address
Simple
Fetch
Address
Fetch
Fast
Fast
Address
Fetch
Address
Data
Set
Fast
Address
Data
Set
Distance
Nearest
Postcode
Nearest
Postcode
Data
Set
Nearest
Property
Nearest
Property
Data
Set
Nearest
Nearest
Data
Set
Nearest
Data
Set
Stored
Nearest
Stored
Nearest
Data
Set
Stored
Stored
Nearest
Data
Set
Stored
Nearest
Radial
Nearest
Radial
Data
Set
Stored
Nearest
Radial
Stored
Nearest
Radial
Data
Set
Changes
As
Changes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
address
elements.
As
many
of
the
address
elements
should
be
provided
along
with
the
formatted
Address
parameter
which
is
used
to
assess
the
confidence
of
the
match.
The
confience
property
reflects
the
confidence
of
the
result
(the
results
are
ranked
in
descending
order
of
confidence).
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
addresses.
The
addresses
should
be
supplied
in
the
Addresses
array
with
one
address
per
record.
Within
each
record,
address
lines
should
be
separated
by
commas.
The
results
are
provided
in
the
order
they
are
suppled
and
batch
sizes
are
limited
to
1000
addresses
per
batch.
As
BatchCleanse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
IDs.
The
IDs
should
be
listed
in
the
array.
The
results
are
provided
in
the
order
they
are
suppled.
As
BatchFetch
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsBySector
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
or
partial
postcode
can
be
supplied.
As
StatisticsByStreetKey
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
outcodes
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestOutcodes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
sectors
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestSectors
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
addresses
with
the
given
PO
box.
The
town
parameter
can
be
blank
or
a
partial
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPoBox
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
postcode.
If
the
building
property
is
provided,
the
coordinates
will
relate
to
the
individual
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodePostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddressId
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddress
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
distance
between
the
origin
and
destination.
They
can
be
postcodes
or
IDs
from
ByLocation.
DistanceType
determines
whether
to
run
a
STRAIGHTLINE
(default)
or
DRIVETIME
calculation.
If
DRIVETIME
is
selected,
the
Cost
parameter
(TIME
or
DISTANCE)
determines
whether
to
calculate
the
quickest
or
shortest
distance.
As
Distance2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
changes
to
the
given
postcodes.
As
BatchPostcodeChanges
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
the
postcode
areas
in
the
UK.
Use
the
ID
with
the
ByArea
method
to
get
list
of
the
localities
in
the
area.
As
Browse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
localities
in
the
given
postcode
area.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
the
locality.
As
ByArea
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
As
ByPostcode
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode
that
also
match
the
building
name
or
number.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcodeFiltered
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
coordinate
rectangle.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByCoordinates
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
a
list
of
the
localities
in
the
the
given
postcode
outcode.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
that
locality.
As
ByOutcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
organisations.
The
town
parameter
can
be
blank
and
the
organisation
name
is
automatically
wildcarded
(e.g.
"Boot"
matches
"Boots"
and
"Boots
the
chemists").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByOrganisation
but
the
data
is
returned
in
a
dataset.
As
ByOrganisation
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreet
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
properties.
Unlike
the
ByStreet
method,
this
returns
properties
matching
the
building
parameter
in
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreetFiltered
but
the
data
is
returned
in
a
dataset.
As
ByStreet
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
properties.
The
town
parameter
should
be
the
name
of
the
town
(e.g.
"Leeds").
The
building
name
is
automatically
wildcarded
(e.g.
"Hill"
matches
"Hilltop"
and
"Hill
View").
As
ByBuilding
but
the
data
is
returned
in
a
dataset.
As
ByBuilding
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
properties
in
the
street.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByStreetKey
but
the
data
is
returned
in
a
dataset.
As
ByStreetKey
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
streets
in
the
given
locality.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
all
the
properties
in
the
street.
As
ByLocalityKey
but
the
data
is
returned
in
a
dataset.
Returns
the
matching
localities
relating
to
the
location
(which
can
be
a
locality
key,
outcode,
postcode
or
town
name).
Use
the
ID
with
the
Location
method
to
get
the
grid
references
or
with
StoredNearest
(Origin).
As
ByLocation
but
the
data
is
returned
in
a
dataset.
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
As
Location
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
freetext
string.
The
freetext
string
can
contain
a
building,
street,
town,
postcode
or
partial
postcode.
Most
combinations
are
valid
although
they
must
be
separated
by
commas
and
in
that
order.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByFreeText
but
the
data
is
returned
in
a
dataset.
As
ByFreeText
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
As
FetchAddress
but
does
not
use
enumerated
type
for
input
parameters,
use
strings
instead
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
As
FetchAddress
but
the
data
is
returned
in
a
dataset.
As
FastAddress
but
the
data
is
returned
in
a
dataset.
Calculates
the
distance
in
metres
between
the
origin
and
destination
postcodes.
Any
errors
will
be
raised
as
a
SOAP
exception.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
NearestPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
nearest
property.
As
NearestProperty
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
Extends
the
Nearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
NearestRadial
but
the
data
is
returned
in
a
dataset.
Extends
the
StoredNearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
StoredNearestRadial
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
checking
all
the
properties
that
have
been
fetched
against
the
account
between
the
StartDate
and
EndDate
and
returns
information
about
which
properties
have
been
changed.
As
Changes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
address
elements.
As
many
of
the
address
elements
should
be
provided
along
with
the
formatted
Address
parameter
which
is
used
to
assess
the
confidence
of
the
match.
The
confience
property
reflects
the
confidence
of
the
result
(the
results
are
ranked
in
descending
order
of
confidence).
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
addresses.
The
addresses
should
be
supplied
in
the
Addresses
array
with
one
address
per
record.
Within
each
record,
address
lines
should
be
separated
by
commas.
The
results
are
provided
in
the
order
they
are
suppled
and
batch
sizes
are
limited
to
1000
addresses
per
batch.
As
BatchCleanse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
IDs.
The
IDs
should
be
listed
in
the
array.
The
results
are
provided
in
the
order
they
are
suppled.
As
BatchFetch
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsBySector
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
or
partial
postcode
can
be
supplied.
As
StatisticsByStreetKey
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
outcodes
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestOutcodes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
sectors
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestSectors
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
addresses
with
the
given
PO
box.
The
town
parameter
can
be
blank
or
a
partial
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPoBox
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
postcode.
If
the
building
property
is
provided,
the
coordinates
will
relate
to
the
individual
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodePostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddressId
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddress
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
distance
between
the
origin
and
destination.
They
can
be
postcodes
or
IDs
from
ByLocation.
DistanceType
determines
whether
to
run
a
STRAIGHTLINE
(default)
or
DRIVETIME
calculation.
If
DRIVETIME
is
selected,
the
Cost
parameter
(TIME
or
DISTANCE)
determines
whether
to
calculate
the
quickest
or
shortest
distance.
As
Distance2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
changes
to
the
given
postcodes.
As
BatchPostcodeChanges
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
the
postcode
areas
in
the
UK.
Use
the
ID
with
the
ByArea
method
to
get
list
of
the
localities
in
the
area.
As
Browse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
localities
in
the
given
postcode
area.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
the
locality.
As
ByArea
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
As
ByPostcode
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode
that
also
match
the
building
name
or
number.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcodeFiltered
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
coordinate
rectangle.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByCoordinates
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
a
list
of
the
localities
in
the
the
given
postcode
outcode.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
that
locality.
As
ByOutcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
organisations.
The
town
parameter
can
be
blank
and
the
organisation
name
is
automatically
wildcarded
(e.g.
"Boot"
matches
"Boots"
and
"Boots
the
chemists").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByOrganisation
but
the
data
is
returned
in
a
dataset.
As
ByOrganisation
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreet
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
properties.
Unlike
the
ByStreet
method,
this
returns
properties
matching
the
building
parameter
in
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreetFiltered
but
the
data
is
returned
in
a
dataset.
As
ByStreet
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
properties.
The
town
parameter
should
be
the
name
of
the
town
(e.g.
"Leeds").
The
building
name
is
automatically
wildcarded
(e.g.
"Hill"
matches
"Hilltop"
and
"Hill
View").
As
ByBuilding
but
the
data
is
returned
in
a
dataset.
As
ByBuilding
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
properties
in
the
street.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByStreetKey
but
the
data
is
returned
in
a
dataset.
As
ByStreetKey
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
streets
in
the
given
locality.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
all
the
properties
in
the
street.
As
ByLocalityKey
but
the
data
is
returned
in
a
dataset.
Returns
the
matching
localities
relating
to
the
location
(which
can
be
a
locality
key,
outcode,
postcode
or
town
name).
Use
the
ID
with
the
Location
method
to
get
the
grid
references
or
with
StoredNearest
(Origin).
As
ByLocation
but
the
data
is
returned
in
a
dataset.
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
As
Location
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
freetext
string.
The
freetext
string
can
contain
a
building,
street,
town,
postcode
or
partial
postcode.
Most
combinations
are
valid
although
they
must
be
separated
by
commas
and
in
that
order.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByFreeText
but
the
data
is
returned
in
a
dataset.
As
ByFreeText
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
As
FetchAddress
but
does
not
use
enumerated
type
for
input
parameters,
use
strings
instead
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
As
FetchAddress
but
the
data
is
returned
in
a
dataset.
As
FastAddress
but
the
data
is
returned
in
a
dataset.
Calculates
the
distance
in
metres
between
the
origin
and
destination
postcodes.
Any
errors
will
be
raised
as
a
SOAP
exception.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
NearestPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
nearest
property.
As
NearestProperty
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
Extends
the
Nearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
NearestRadial
but
the
data
is
returned
in
a
dataset.
Extends
the
StoredNearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
StoredNearestRadial
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
checking
all
the
properties
that
have
been
fetched
against
the
account
between
the
StartDate
and
EndDate
and
returns
information
about
which
properties
have
been
changed.
As
Changes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
address
elements.
As
many
of
the
address
elements
should
be
provided
along
with
the
formatted
Address
parameter
which
is
used
to
assess
the
confidence
of
the
match.
The
confience
property
reflects
the
confidence
of
the
result
(the
results
are
ranked
in
descending
order
of
confidence).
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
addresses.
The
addresses
should
be
supplied
in
the
Addresses
array
with
one
address
per
record.
Within
each
record,
address
lines
should
be
separated
by
commas.
The
results
are
provided
in
the
order
they
are
suppled
and
batch
sizes
are
limited
to
1000
addresses
per
batch.
As
BatchCleanse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
given
IDs.
The
IDs
should
be
listed
in
the
array.
The
results
are
provided
in
the
order
they
are
suppled.
As
BatchFetch
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
As
StatisticsByPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
postcode
is
required.
As
StatisticsBySector
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
number
of
delivery
points
for
the
matching
postcodes.
A
full
or
partial
postcode
can
be
supplied.
As
StatisticsByStreetKey
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
outcodes
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestOutcodes
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
nearest
sectors
(with
coordinates)
to
the
given
coordinates.
The
distance
between
the
point
of
origin
and
centre
of
the
outcode
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned,
within
Radius
metres
of
the
origin,
along
with
the
distance
in
the
specified
Units.
As
NearestSectors
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
addresses
with
the
given
PO
box.
The
town
parameter
can
be
blank
or
a
partial
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPoBox
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
postcode.
If
the
building
property
is
provided,
the
coordinates
will
relate
to
the
individual
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodePostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddressId
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
coordinates
for
the
property.
If
the
Accuracy
parameter
is
set
to
"High"
then
coordinates
accurate
to
1
metre
are
returned,
otherwise
coordinates
accurate
to
100m
are
returned.
As
GeocodeAddress
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
distance
between
the
origin
and
destination.
They
can
be
postcodes
or
IDs
from
ByLocation.
DistanceType
determines
whether
to
run
a
STRAIGHTLINE
(default)
or
DRIVETIME
calculation.
If
DRIVETIME
is
selected,
the
Cost
parameter
(TIME
or
DISTANCE)
determines
whether
to
calculate
the
quickest
or
shortest
distance.
As
Distance2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
changes
to
the
given
postcodes.
As
BatchPostcodeChanges
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
the
postcode
areas
in
the
UK.
Use
the
ID
with
the
ByArea
method
to
get
list
of
the
localities
in
the
area.
As
Browse
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
localities
in
the
given
postcode
area.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
the
locality.
As
ByArea
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcode
but
the
data
is
returned
in
a
dataset.
As
ByPostcode
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
properties
in
the
given
postcode
that
also
match
the
building
name
or
number.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByPostcodeFiltered
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
in
the
given
coordinate
rectangle.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByCoordinates
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
a
list
of
the
localities
in
the
the
given
postcode
outcode.
Use
the
ID
with
the
ByLocalityKey
method
to
get
a
list
of
the
streets
in
that
locality.
As
ByOutcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
organisations.
The
town
parameter
can
be
blank
and
the
organisation
name
is
automatically
wildcarded
(e.g.
"Boot"
matches
"Boots"
and
"Boots
the
chemists").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByOrganisation
but
the
data
is
returned
in
a
dataset.
As
ByOrganisation
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreet
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
matching
properties.
Unlike
the
ByStreet
method,
this
returns
properties
matching
the
building
parameter
in
matching
streets.
The
town
parameter
can
be
the
name
of
the
town
or
the
first
part
of
the
postcode
(e.g.
"LS,
LS2,
Leeds").
The
street
name
is
automatically
wildcarded
(e.g.
"High"
matches
"High
Street"
and
"High
Way").
Use
the
fuzzy
search
to
search
phonetically.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
the
properties
in
this
street.
As
ByStreetFiltered
but
the
data
is
returned
in
a
dataset.
As
ByStreet
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Queries
the
database,
returning
all
the
matching
properties.
The
town
parameter
should
be
the
name
of
the
town
(e.g.
"Leeds").
The
building
name
is
automatically
wildcarded
(e.g.
"Hill"
matches
"Hilltop"
and
"Hill
View").
As
ByBuilding
but
the
data
is
returned
in
a
dataset.
As
ByBuilding
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
street
is
found
the
method
will
return
the
list
of
properties.
However,
if
only
one
property
is
listed,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
properties
in
the
street.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByStreetKey
but
the
data
is
returned
in
a
dataset.
As
ByStreetKey
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
Returns
all
the
streets
in
the
given
locality.
Use
the
ID
with
the
ByStreetKey
method
to
get
a
list
of
all
the
properties
in
the
street.
As
ByLocalityKey
but
the
data
is
returned
in
a
dataset.
Returns
the
matching
localities
relating
to
the
location
(which
can
be
a
locality
key,
outcode,
postcode
or
town
name).
Use
the
ID
with
the
Location
method
to
get
the
grid
references
or
with
StoredNearest
(Origin).
As
ByLocation
but
the
data
is
returned
in
a
dataset.
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
Returns
the
coordinates
for
the
given
Id
(from
ByLocation)
As
Location
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
returning
all
the
properties
matching
the
freetext
string.
The
freetext
string
can
contain
a
building,
street,
town,
postcode
or
partial
postcode.
Most
combinations
are
valid
although
they
must
be
separated
by
commas
and
in
that
order.
Use
the
ID
with
the
FetchAddress
method
to
get
a
complete
formatted
address.
As
ByFreeText
but
the
data
is
returned
in
a
dataset.
As
ByFreeText
but
the
data
is
returned
in
the
CombinedResults
structure.
If
only
one
property
would
be
returned
by
the
method,
the
address
is
automatically
selected
and
returned
instead
of
the
interim
results.
As
FetchAddress
but
does
not
use
enumerated
type
for
input
parameters,
use
strings
instead
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
the
address
corresponding
to
the
ID
parameter.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
Queries
the
database,
returning
an
address
matching
the
Postcode
and
Building.
The
Building
parameter
represents
the
building
name
or
number
and
is
automatically
wildcarded
(e.g.
"Eni"
matches
"Enigma
House")
and
can
be
blank
and
if
the
postcode
contains
more
than
one
property,
the
first
will
be
returned.
Use
the
ContentType
parameter
to
select
which
fields
to
return.
Use
the
Language
parameter
to
select
which
language
to
return
the
address
in.
As
FetchAddress
but
the
data
is
returned
in
a
dataset.
As
FastAddress
but
the
data
is
returned
in
a
dataset.
Calculates
the
distance
in
metres
between
the
origin
and
destination
postcodes.
Any
errors
will
be
raised
as
a
SOAP
exception.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
NearestPostcode
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
nearest
property.
As
NearestProperty
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
and
the
array
of
Destination
postcodes.
The
distance
between
the
Origin
and
each
Destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
Destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
Nearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
As
StoredNearest2
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
working
out
the
coordinates
of
the
Origin
postcode
against
a
set
of
postcodes
that
have
already
been
uploaded
against
the
License
Key.
The
distance
between
the
Origin
and
each
uploaded
destination
is
calculated
and
the
nearest
Items
(e.g.
2
returns
the
nearest
2
destinations)
are
returned
along
with
the
distance
in
the
specified
Units.
Extends
the
Nearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
NearestRadial
but
the
data
is
returned
in
a
dataset.
Extends
the
StoredNearest
method
with
support
for
radial
restrictions
(i.e.
returns
only
the
items
within
X
of
the
origin.
As
StoredNearestRadial
but
the
data
is
returned
in
a
dataset.
Queries
the
database,
checking
all
the
properties
that
have
been
fetched
against
the
account
between
the
StartDate
and
EndDate
and
returns
information
about
which
properties
have
been
changed.
